swagger: "2.0"
info:
  description: "This is a documentation of the external student import API for [Yarrive](https://yarrive.com)."
  version: "1.0.0"
  title: "Yarrive Student Import"
host: "admin.yarrive.com"
basePath: "/api/external"
tags:
- name: "courses"
  description: "Provides information about courses"
- name: "students"
  description: "Provides endpoints to import students"
schemes:
- "https"
security:
  - api_key: []
paths:
  /courses:
    get:
      tags:
      - "courses"
      summary: "List available courses"
      description: "Returns a list of all courses the current tenant can access."
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CoursesResponse"
        "500":
          description: "error response"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /students:
    post:
      tags:
      - "students"
      summary: "Import students"
      description: "Multiple students can be imported at once. Returns a return status for each student.\n\n
      **General errors** (Response code 500, `error` + `message` provided)\n
      * `ERR_MISSING_KEY`\n
      * * X-Api-Key header missing\n
      * `ERR_INVALID_KEY`\n
      * * Invalid Api-Key: No User/Tenant found for provided Api-Key. Please check the key or generate a new one.\n
      * * Invalid Api-Key: User who is owner of provided Api-Key is disabled.\n
      
      **Student specific errors** (`error` + `errorDetails` per student)\n
      * `ERR_BAD_EMAIL`\n
      * * Email validation failed\n
      * `ERR_STUDENT_VALIDATION_FAILED`\n
      * * Duplicate student because of duplicate email within import data\n
      * * Duplicate course <id>. Student can only join one group within a course.\n
      * * Student is already in existing course group <name> in course <id>. Student can only join one group within a course.\n
      * * Bad birthdate format. Please make sure it is DD.MM.YYYY\n
      * * Duplicate course group within student\n
      * * Bad start-date format for group <name> in course <id>. Please make sure it is DD.MM.YYYY\n
      * * Bad end-date format for group <name> in course <id>. Please make sure it is DD.MM.YYYY\n
      * * End-date before start-date for group <name> in course <id>\n
      * * At least one course must be provided!\n
      * * Courses with Ids <ids> do not exist or are archived\n
      * * Student is already in course group <name> in course <id>\n
      "
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description:
          List of students to import. email, birthDate and courses fields are required.
          courseId can be retrieved by using the GET /courses endpoint.
          If the given courseGroup does not exist yet, then it will be created.
        required: true
        schema:
          type: "object"
          properties:
            students:
              type: array
              items:
                $ref: "#/definitions/StudentImport"

      responses:
        "200":
          description:
            Successful operation, returns a separate success flag for each student.
            error and errorDetails are only sent if success=false.
          schema:
            $ref: "#/definitions/StudentImportResponse"
        "500":
          description: "error response"
          schema:
            $ref: "#/definitions/ErrorResponse"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "X-Api-Key"
    in: "header"
    description:
      Retrieve an API key for your tenant in the yarrive admin interface.
      This API key must be sent for each request and will define which tenant
      will be assigned to the imported student.
definitions:
  CoursesResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      courses:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              example: 1
            title:
              type: "string"
              example: "Basismodul"
  StudentImport:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
      firstName:
        type: "string"
        example: "Max"
      lastName:
        type: "string"
        example: "Mustermann"
      zipCode:
        type: "string"
        example: "8020"
      city:
        type: "string"
        example: "Graz"
      state:
        type: "string"
        example: "Steiermark"
      country:
        type: "string"
        example: "at"
        description: "two-letter country code (ISO 3166-1 alpha-2)"
      birthDate:
        type: "string"
        format: "date"
      courses:
        type: "array"
        items:
          type: "object"
          properties:
            courseId:
              type: "integer"
              example: 1
            courseGroup:
              type: "string"
              example: "MÃ¤rzgruppe 2022"
            startDate:
              type: "string"
              format: "date"
              description: "Start date of the given course group if it does not exist yet"
            endDate:
              type: "string"
              format: "date"
              description: "End date of the given course group if it does not exist yet"
          required:
            - courseId
            - courseGroup
    required:
      - email
      - courses
      - birthDate
  StudentImportResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      students:
        type: "array"
        items:
          type: "object"
          properties:
            email:
              type: "string"
              format: "email"
            success:
              type: "boolean"
              example: false
            error:
              type: "string"
              enum:
                - ERR_BAD_EMAIL
                - ERR_STUDENT_VALIDATION_FAILED
                - ERR_STUDENT_IMPORT_FAILED
            errorDetails:
              type: "string"
              example: "Course 1 does not exist"
  ErrorResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
        example: false
      error:
        type: "string"
        enum:
          - ERR_MISSING_KEY
          - ERR_INVALID_KEY
          - ERR_UNKNOWN
      message:
        type: "string"
        example: "X-Api-Key header missing"
